{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/CodeletGallery.js","components/ClackGallery.js","components/BformsGallery.js","components/Portfolio.js","components/ContactUs.js","components/Testimonials.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","style","fontSize","margin","name","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","skillsDescription","skills","skillname","toLowerCase","CodeletGallery","AutoplaySlider1","withAutoplay","AwesomeSlider","play","cancelOnInteraction","interval","data-src","ClackGallery","AutoplaySlider3","BformsGallery","AutoplaySlider4","Porfolio","ContactUs","Footer","imagebaseurl","linkedinId","skypeid","email","work","CompanyName","MonthOfLeaving","YearOfLeaving","portfolio","description","imgurl","testimonials","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a70c8ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n              Show navigation\n            </a>\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n              Hide navigation\n            </a>\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  Home\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  Skills\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#portfolio\">\n                  Works\n                </a>\n              </li>\n              {/* <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li> */}\n              <li>\n                <a className=\"smoothscroll\" href=\"#contact\">\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            <div className=\"banner-text\">\n              <h1 className=\"responsive-headline\">\n                <p style={{ fontSize: \"0.3em\", margin: 0 }}>Hello, I'm </p>{\" \"}\n                {resumeData.name}\n              </h1>\n              <h2 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n                I am a {resumeData.role}.{resumeData.roleDescription}\n              </h2>\n              <hr />\n              <ul className=\"social\">\n                {resumeData.socialLinks &&\n                  resumeData.socialLinks.map((item) => {\n                    return (\n                      <li key={item.name}>\n                        <a href={item.url} target=\"blank\">\n                          <i className={item.className}></i>\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\">\n              <i className=\"icon-down-circle\"></i>\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from \"react\";\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.education &&\n              resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfPassing} {item.YearOfPassing}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        {/* <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1><span>Work</span></h1>\n            {\n              resumeData.work && resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                      <p>\n                        {item.Achievements}\n                      </p>\n                    </div>\n\n                  </div>\n\n                )\n              })\n            }\n          </div>\n        </div> */}\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <p>{resumeData.skillsDescription}</p>\n\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.skills &&\n                  resumeData.skills.map((item) => {\n                    return (\n                      <li>\n                        <span\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\n                        ></span>\n                        <em>{item.skillname}</em>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\nimport \"react-awesome-slider/dist/styles.css\";\n//import \"../styles/galleries.css\";\n\nconst CodeletGallery = () => {\n  const AutoplaySlider1 = withAutoplay(AwesomeSlider);\n  return (\n    <AutoplaySlider1\n      play={true}\n      cancelOnInteraction={false} // should stop playing on user interaction\n      interval={4000}\n    >\n      {/* main page image */}\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/codelet-ss2.png\" />\n      {/* single post images */}\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/codelet-ss1.png\" />\n      <div data-src=\"https://github.com/b-tsui/Codelet-Frontend/raw/master/documentation/images/card-flip.gif?raw=true\" />\n      <div data-src=\"https://github.com/b-tsui/Codelet-Frontend/raw/master/documentation/images/matching-game.gif?raw=true\" />\n      <div data-src=\"https://github.com/b-tsui/Codelet-Frontend/raw/master/documentation/images/quiz-game.gif?raw=true\" />\n    </AutoplaySlider1>\n  );\n};\n\nexport default CodeletGallery;\n","import React from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\nimport \"react-awesome-slider/dist/styles.css\";\nimport \"../styles/galleries.css\";\n\nconst ClackGallery = () => {\n  const AutoplaySlider3 = withAutoplay(AwesomeSlider);\n  return (\n    <AutoplaySlider3\n      play={true}\n      cancelOnInteraction={false} // should stop playing on user interaction\n      interval={5000}\n    >\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/clackss1.png\" />\n      <div data-src=\"https://lkang97.github.io/images/clack.png\" />\n    </AutoplaySlider3>\n  );\n};\n\nexport default ClackGallery;\n","import React from \"react\";\nimport AwesomeSlider from \"react-awesome-slider\";\nimport withAutoplay from \"react-awesome-slider/dist/autoplay\";\nimport \"react-awesome-slider/dist/styles.css\";\nimport \"../styles/galleries.css\";\n\nconst BformsGallery = () => {\n  const AutoplaySlider4 = withAutoplay(AwesomeSlider);\n  return (\n    <AutoplaySlider4\n      play={true}\n      cancelOnInteraction={false} // should stop playing on user interaction\n      interval={3000}\n    >\n      {/* main page image */}\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/bforms-ss.png\" />\n      {/* single post images */}\n      {/* <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/bformsSS1.png\" /> */}\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/bformsSC1.png\" />\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/bformsSC2.png\" />\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/bformsSC3.png\" />\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/bformsSC4.png\" />\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/bformsSC5.png\" />\n      <div data-src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/bformsSC6.png\" />\n    </AutoplaySlider4>\n  );\n};\n\nexport default BformsGallery;\n","import React, { Component } from \"react\";\nimport ClackurGallery from \"./ClackurGallery\";\nimport CodeletGallery from \"./CodeletGallery\";\nimport ClackGallery from \"./ClackGallery\";\nimport \"../styles/portfolio.css\";\nimport BformsGallery from \"./BformsGallery\";\n\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Stuff I've made</span>\n            </h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            <div className=\"row item portfolio-gallery\">\n              <div className=\"twelve columns\">\n                <h3>\n                  <a href={\"https://www.codelet.info/\"} target=\"blank\">\n                    Codelet{\" \"}\n                  </a>\n                  <a\n                    href={\"https://github.com/b-tsui/Codelet-Frontend\"}\n                    target=\"blank\"\n                  >\n                    <i className={\"fa fa-github\"}></i>\n                  </a>\n                </h3>\n                <p className=\"info\">\n                  A coding themed study app that uses flashcards and fun games\n                  to ingrain learning objectives\n                </p>\n                <p>\n                  <CodeletGallery />\n                </p>\n              </div>\n            </div>\n            <div className=\"row item portfolio-gallery\">\n              <div className=\"twelve columns\">\n                <h3>\n                  <a href={\"https://bforms.dev/\"} target=\"blank\">\n                    🅱️-forms{\" \"}\n                  </a>\n                  <a href={\"https://github.com/b-tsui/b-forms\"} target=\"blank\">\n                    <i className={\"fa fa-github\"}></i>\n                  </a>\n                </h3>\n                <p className=\"info\">\n                  B-forms is a form generation app that allows your create\n                  better forms! Create, share and analyze your forms with\n                  b-forms.\n                </p>\n                <p>\n                  <BformsGallery />\n                </p>\n              </div>\n            </div>\n            <div className=\"row item portfolio-gallery\">\n              <div className=\"twelve columns\">\n                <h3>\n                  <a href={\"https://www.codelet.info/\"} target=\"blank\">\n                    Clack{\" \"}\n                  </a>\n                  <a\n                    href={\"https://github.com/b-tsui/Codelet-Frontend\"}\n                    target=\"blank\"\n                  >\n                    <i className={\"fa fa-github\"}></i>\n                  </a>\n                </h3>\n                <p className=\"info\">\n                  Clack is a messaging application inspired by Slack that brings\n                  the team together\n                </p>\n                <p>\n                  <ClackGallery />\n                </p>\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\">\n                    <a href=\"#modal-01\">\n                      <img src={`${item.imgurl}`} className=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}</p>\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div> */}\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"ten columns\">\n            <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n            </p>\n          </div>\n        </div>\n        {/* <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4>\n                <h4>Email :\n                  {resumeData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div> */}\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  imagebaseurl:\n    \"https://media-exp1.licdn.com/dms/image/C5603AQEsPm9CPGqejA/profile-displayphoto-shrink_100_100/0?e=1595462400&v=beta&t=Towza838YVmph9tdIdYHHgECv_WFMo53qH9umseTIFU\",\n  name: \"Brandon Tsui\",\n  role: \"Software Engineer and Data Scientist\",\n  linkedinId: \"72474684\",\n  skypeid: \"Your skypeid\",\n  roleDescription:\n    \" I have a passion for web development and am always yearning to learn new technologies and perfect existing ones\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/brandon-tsui-72474684/\",\n      className: \"fa fa-linkedin\",\n    },\n    {\n      name: \"github\",\n      url: \"https://github.com/b-tsui\",\n      className: \"fa fa-github\",\n    },\n    {\n      name: \"email\",\n      url: \"mailto:itstsui@gmail.com\",\n      className: \"fa fa-envelope\",\n    },\n  ],\n  aboutme:\n    \"I'm a software engineer with a passion for problem solving and the outdoors. I take pride in bringing new features and ideas to life, along with the challenges they bring. When I'm not tackling coding challenges at my desk, I enjoy working on problems at climbing gym and boulders around the world! \",\n  address: \"SF Bay Area\",\n  website: \"btsui.dev@gmail.com\",\n  email: \"btsui.dev@gmail.com\",\n  education: [\n    {\n      UniversityName: \"App Academy\",\n      specialization: \"Full Stack Web Development\",\n      MonthOfPassing: \"July\",\n      YearOfPassing: \"2020\",\n      //\"Achievements\": \"Some Achievements\"\n    },\n    {\n      UniversityName: \"University of California, San Diego\",\n      specialization: \"Economics, with minor in Data Science\",\n      MonthOfPassing: \"June\",\n      YearOfPassing: \"2018\",\n      // \"Achievements\": \"Some Achievements\"\n    },\n  ],\n  work: [\n    {\n      CompanyName: \"Some Company\",\n      specialization: \"Some specialization\",\n      MonthOfLeaving: \"Jan\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"Some Achievements\",\n    },\n    {\n      CompanyName: \"Some Company\",\n      specialization: \"Some specialization\",\n      MonthOfLeaving: \"Jan\",\n      YearOfLeaving: \"2018\",\n      Achievements: \"Some Achievements\",\n    },\n  ],\n  skillsDescription:\n    \"JavaScript, Python React, Redux, Express, Node, Flask, SQLAlchemy, SQL(PostgreSQL), MongoDB, GraphQL, HTML5, CSS, AWS, Elasticsearch\",\n  skills: [\n    {\n      skillname: \"Javascript\",\n    },\n    {\n      skillname: \"Python\",\n    },\n    {\n      skillname: \"Nodejs\",\n    },\n    {\n      skillname: \"PostgreSQL\",\n    },\n    {\n      skillname: \"AWS\",\n    },\n    {\n      skillname: \"Reactjs\",\n    },\n    {\n      skillname: \"HTML5\",\n    },\n    {\n      skillname: \"CSS3\",\n    },\n  ],\n  portfolio: [\n    {\n      name: \"Clackur\",\n      description:\n        \"Image sharing app made by mechanical keyboard enthusiasts, by mechanical keyboard enthusiasts.\",\n      imgurl: \"images/portfolio/phone.jpg\",\n    },\n    {\n      name: \"Clack\",\n      description: \"Instant messaging app inspired by slack\",\n      imgurl: \"images/portfolio/project.jpg\",\n    },\n    {\n      name: \"project3\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/project2.png\",\n    },\n    {\n      name: \"project4\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/phone.jpg\",\n    },\n  ],\n  testimonials: [\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    },\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    },\n  ],\n};\n\nexport default resumeData;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        <Portfolio resumeData={resumeData} />\n        {/* <Testimonials resumeData={resumeData}/> */}\n        <ContactUs resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}